"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TNS_CustomScrollingLayoutCallback = (function (_super) {
    __extends(TNS_CustomScrollingLayoutCallback, _super);
    function TNS_CustomScrollingLayoutCallback() {
        return _super.call(this) || this;
    }
    TNS_CustomScrollingLayoutCallback.prototype.onLayoutFinished = function (child, parent) {
        var centerOffset = child.getHeight() / 2.0 / parent.getHeight();
        var yRelativeToCenterOffset = child.getY() / parent.getHeight() + centerOffset;
        var progresstoCenter = Math.sin(yRelativeToCenterOffset * Math.PI);
        var mProgressToCenter = Math.abs(0.5 - yRelativeToCenterOffset);
        mProgressToCenter = Math.min(mProgressToCenter, TNS_CustomScrollingLayoutCallback.MAX_ICON_PROGRESS);
        child.setScaleX(1 - mProgressToCenter);
        child.setScaleY(1 - mProgressToCenter);
        child.setX(+(1 - progresstoCenter) * 100);
    };
    TNS_CustomScrollingLayoutCallback.MAX_ICON_PROGRESS = 2;
    return TNS_CustomScrollingLayoutCallback;
}(android.support.wear
    .widget.WearableLinearLayoutManager.LayoutCallback));
exports.TNS_CustomScrollingLayoutCallback = TNS_CustomScrollingLayoutCallback;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG5zLWN1c3RvbS1zY3JvbGxpbmctbGF5b3V0LWNhbGxiYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidG5zLWN1c3RvbS1zY3JvbGxpbmctbGF5b3V0LWNhbGxiYWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7SUFBdUQscURBQ0g7SUFJbEQ7ZUFDRSxpQkFBTztJQUNULENBQUM7SUFFRCw0REFBZ0IsR0FBaEIsVUFDRSxLQUF3QixFQUN4QixNQUE4QztRQUU5QyxJQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNsRSxJQUFNLHVCQUF1QixHQUMzQixLQUFLLENBQUMsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDLFNBQVMsRUFBRSxHQUFHLFlBQVksQ0FBQztRQUVuRCxJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRXJFLElBQUksaUJBQWlCLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsdUJBQXVCLENBQUMsQ0FBQztRQUVoRSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUMxQixpQkFBaUIsRUFDakIsaUNBQWlDLENBQUMsaUJBQWlCLENBQ3BELENBQUM7UUFFRixLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLGlCQUFpQixDQUFDLENBQUM7UUFDdkMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQTFCYyxtREFBaUIsR0FBRyxDQUFDLENBQUM7SUEyQnZDLHdDQUFDO0NBQUEsQUE5QkQsQ0FBdUQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJO0tBQ3hFLE1BQU0sQ0FBQywyQkFBMkIsQ0FBQyxjQUFjLEdBNkJuRDtBQTlCWSw4RUFBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVE5TX0N1c3RvbVNjcm9sbGluZ0xheW91dENhbGxiYWNrIGV4dGVuZHMgYW5kcm9pZC5zdXBwb3J0LndlYXJcbiAgLndpZGdldC5XZWFyYWJsZUxpbmVhckxheW91dE1hbmFnZXIuTGF5b3V0Q2FsbGJhY2sge1xuICAvKiogSG93IG11Y2ggc2hvdWxkIHdlIHNjYWxlIHRoZSBpY29uIGF0IG1vc3QuICovXG4gIHByaXZhdGUgc3RhdGljIE1BWF9JQ09OX1BST0dSRVNTID0gMjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgb25MYXlvdXRGaW5pc2hlZChcbiAgICBjaGlsZDogYW5kcm9pZC52aWV3LlZpZXcsXG4gICAgcGFyZW50OiBhbmRyb2lkLnN1cHBvcnQudjcud2lkZ2V0LlJlY3ljbGVyVmlld1xuICApIHtcbiAgICBjb25zdCBjZW50ZXJPZmZzZXQgPSBjaGlsZC5nZXRIZWlnaHQoKSAvIDIuMCAvIHBhcmVudC5nZXRIZWlnaHQoKTtcbiAgICBjb25zdCB5UmVsYXRpdmVUb0NlbnRlck9mZnNldCA9XG4gICAgICBjaGlsZC5nZXRZKCkgLyBwYXJlbnQuZ2V0SGVpZ2h0KCkgKyBjZW50ZXJPZmZzZXQ7XG5cbiAgICBjb25zdCBwcm9ncmVzc3RvQ2VudGVyID0gTWF0aC5zaW4oeVJlbGF0aXZlVG9DZW50ZXJPZmZzZXQgKiBNYXRoLlBJKTtcblxuICAgIGxldCBtUHJvZ3Jlc3NUb0NlbnRlciA9IE1hdGguYWJzKDAuNSAtIHlSZWxhdGl2ZVRvQ2VudGVyT2Zmc2V0KTtcblxuICAgIG1Qcm9ncmVzc1RvQ2VudGVyID0gTWF0aC5taW4oXG4gICAgICBtUHJvZ3Jlc3NUb0NlbnRlcixcbiAgICAgIFROU19DdXN0b21TY3JvbGxpbmdMYXlvdXRDYWxsYmFjay5NQVhfSUNPTl9QUk9HUkVTU1xuICAgICk7XG5cbiAgICBjaGlsZC5zZXRTY2FsZVgoMSAtIG1Qcm9ncmVzc1RvQ2VudGVyKTtcbiAgICBjaGlsZC5zZXRTY2FsZVkoMSAtIG1Qcm9ncmVzc1RvQ2VudGVyKTtcbiAgICBjaGlsZC5zZXRYKCsoMSAtIHByb2dyZXNzdG9DZW50ZXIpICogMTAwKTtcbiAgfVxufVxuIl19